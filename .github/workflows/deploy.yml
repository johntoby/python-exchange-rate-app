name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Connect to AWS instance and deploy
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
        chmod 600 private_key.pem
        
        # Copy files to EC2 instance
        scp -i private_key.pem -o StrictHostKeyChecking=no -r . ec2-user@${{ secrets.EC2_HOST }}:/home/ec2-user/app/
        
        # SSH into instance and deploy
        ssh -i private_key.pem -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
          mkdir app
          cd /home/ubuntu/app
          
          # Build Docker image
          docker build -t johntoby/exchange-rate-app:latest .
          
          # Load image into minikube
          minikube image load johntoby/exchange-rate-app:latest
          
          # Apply Kubernetes manifests
          kubectl apply -f deployment.yml
          kubectl apply -f service.yml
          
          # Wait for deployment to be ready
          kubectl rollout status deployment/exchange-rate-app
          
          # Get service URL
          minikube service exchange-rate-service --url
        EOF
        
        rm -f private_key.pem